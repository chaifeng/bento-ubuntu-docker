# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "bento/#{ENV['BENTO_BOX']}"
  config.vm.box_version = ENV['BENTO_BOX_VERSION']

  bento_os_name = ENV['BENTO_BOX'] && ENV['BENTO_BOX'].split('-')[0] || 'ubuntu'

  config.vm.provision 'docker', type: 'shell', inline: <<-SHELL
    set -eu -o pipefail
    release_name=#{bento_os_name}
    [[ -f /vagrant/proxy.sh ]] && source /vagrant/proxy.sh
    DOCKER_VERSION="#{ENV['DOCKER_VERSION']}"
    if [[ -z "$DOCKER_VERSION" ]]; then
      echo 'DOCKER_VERSION is not set.'
      exit 1
    fi
    export DEBIAN_FRONTEND=noninteractive
    apt-get update
    apt-get install -y ca-certificates curl gnupg lsb-release
    install -m 0755 -d /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/#{bento_os_name}/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    chmod a+r /etc/apt/keyrings/docker.gpg
    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/#{bento_os_name} \
      "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
    apt-get update
    apt-get install -y "docker-ce=${DOCKER_VERSION}*" ||
      apt-get install -y "docker-ce=5:${DOCKER_VERSION}*"
    unset http_proxy https_proxy no_proxy
    docker info

    usermod -aG docker vagrant
    echo cleanup.sh: "https://github.com/chef/bento/raw/main/packer_templates/scripts/#{bento_os_name}/cleanup_#{bento_os_name}.sh"
    echo minimize.sh: 'https://github.com/chef/bento/raw/main/packer_templates/scripts/_common/minimize.sh'
  SHELL

  config.vm.provision 'cleanup', type: 'shell', # run: "never",
    path: "https://github.com/chef/bento/raw/main/packer_templates/scripts/#{bento_os_name}/cleanup_#{bento_os_name}.sh"

  config.vm.provision 'minimize', type: 'shell',
    path: 'https://github.com/chef/bento/raw/main/packer_templates/scripts/_common/minimize.sh',
    env: {'PACKER_BUILDER_TYPE': 'vagrant'}
end
